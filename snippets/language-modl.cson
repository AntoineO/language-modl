'.source.modl':
  '#ifndef … #define … #endif':
    'prefix': 'def'
    'body': '#ifndef ${1:SYMBOL}\n#define $1 ${2:value}\n#endif'
  '#include ""':
    'prefix': 'inc'
    'body': '#include "${1:.h}"'
  '#pragma mark':
    'prefix': 'mark'
    'body': '#if 0\n${1:#pragma mark -\n}#pragma mark $2\n#endif\n\n$0'
  'For Loop':
    'prefix': 'for'
    'body': 'for (${1:i} = 0; $1 < ${2:count}; $1${3:++})\n{\n\t${4:/* code */}\n}'
  'For Loop 1':
    'prefix': 'for1'
    'body': 'for (${1:record} = 1; $1 <= ${2:count}; $1${3:++})\n{\n\t${4:/* code */}\n}'
  'Header Include-Guard':
    'prefix': 'once'
    'body': '#ifndef ${1:SYMBOL}\n#define $1\n\n${2}\n\n#endif /* end of include guard: $1 */\n'
  'Typedef':
    'prefix': 'td'
    'body': '${1:integer} ${2:MyCustomType};'
  'Do While Loop':
    'prefix': 'do'
    'body': 'do\n{\n\t${0:/* code */}\n} while(${1:/* condition */});'
  'While Loop':
    'prefix': 'while'
    'body': 'while (${1:/* condition */})\n{\n\t${2:/* code */}\n}'
  'If Condition':
    'prefix': 'if'
    'body': 'if (${1:/* condition */})\n{\n\t${2:/* code */}\n}'
  'If Else':
    'prefix': 'ife'
    'body': 'if (${1:/* condition */})\n{\n\t${2:/* code */}\n}\nelse\n{\n\t${3:/* code */}\n}'
  'If ElseIf':
    'prefix': 'iff'
    'body': 'if (${1:/* condition */})\n{\n\t${2:/* code */}\n}\nelse if (${3:/* condition */})\n{\n\t${4:/* code */}\n}'
  'If ElseIf Else':
    'prefix': 'iffe'
    'body': 'if (${1:/* condition */})\n{\n\t${2:/* code */}\n}\nelse if (${3:/* condition */})\n{\n\t${4:/* code */}\n}\nelse\n{\n\t${5:/* code */}\n}'
  'Switch Statement':
    'prefix': 'switch'
    'body': 'switch (${1:/* expression */})\n{\n\tcase ${2:/* value */}:\n}'
  'case':
    'prefix': 'cs'
    'body': 'case ${1:/* value */}:$0'
  'procedure':
    'prefix': 'procedure'
    'body': 'procedure ${1:name}(${2:/* arguments */})\n{\n\t${3:/* code */}\n}'
  'any function':
    'prefix': 'func'
    'body': '${1:integer} ${2:name}(${3:/* arguments */})\n{\n\t${5:/* code */}\n\treturn ${4:0};\n}'
  'DBDataGetAsNumber':
    'prefix': 'dbgn'
    'body': 'DBDataGetAsNumber(${1:@integer databaseIndex}, ${2:@integer tableIndex}, ${3:@integer fieldIndex}, ${4:@integer recordIndex})${5:;}$0'
  'DBDataGetAsString':
    'prefix': 'dbgs'
    'body': 'DBDataGetAsString(${1:@integer databaseIndex}, ${2:@integer tableIndex}, ${3:@integer fieldIndex}, ${4:@integer recordIndex})${5:;}$0'
  'DoModifyRunParameter':
    'prefix': 'DoModifyRunParameter'
    'body': 'procedure DoModifyRunParameter()\n{\n\t${1:/* code */}\n}'
  'DoPrecheckdata':
    'prefix': 'DoPrecheckdata'
    'body': 'procedure DoPrecheckdata()\n{\n\t${1:/* code */}\n}'
  'DoCheckdata':
    'prefix': 'DoCheckdata'
    'body': 'procedure DoCheckdata()\n{\n\t${1:/* code */}\n}'
  'DoStepSize':
    'prefix': 'DoStepSize'
    'body': 'procedure DoStepSize()\n{\n\t${1:/* code */}\n}'
  'DoInitsim':
    'prefix': 'DoInitsim'
    'body': 'procedure DoInitsim()\n{\n\t${1:/* code */}\n}'
  'DoPostinitsim':
    'prefix': 'DoPostinitsim'
    'body': 'procedure DoPostinitsim()\n{\n\t${1:/* code */}\n}'
  'DoFinalcalc':
    'prefix': 'DoFinalcalc'
    'body': 'procedure DoFinalcalc()\n{\n\t${1:/* code */}\n}'
  'DoEndsim':
    'prefix': 'DoEndsim'
    'body': 'procedure DoEndsim()\n{\n\t${1:/* code */}\n}'
